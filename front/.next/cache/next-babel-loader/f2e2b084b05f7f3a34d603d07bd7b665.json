{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nvar initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n}; //action creator\n\nexport var loginAction = function loginAction(data) {\n  return {\n    type: 'LOG_IN',\n    data: data\n  };\n}; //action creator\n\nexport var logoutAction = function logoutAction() {\n  console.log(\"3333\");\n  return {\n    type: 'LOG_IN'\n  };\n}; // (이전상태, 액션) => 다음상태\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: false,\n          user: null\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/simjieun/react연습/inflearn/react-nodebird/front/reducers/index.js"],"names":["HYDRATE","initialState","user","isLoggedIn","signUpData","loginData","post","mainPosts","loginAction","data","type","logoutAction","console","log","rootReducer","state","action","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAC;AACDC,IAAAA,UAAU,EAAE,KADX;AAEDD,IAAAA,IAAI,EAAC,IAFJ;AAGDE,IAAAA,UAAU,EAAC,EAHV;AAIDC,IAAAA,SAAS,EAAC;AAJT,GADY;AAOjBC,EAAAA,IAAI,EAAC;AACDC,IAAAA,SAAS,EAAE;AADV;AAPY,CAArB,C,CAYA;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAU;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAE,QADH;AAEHD,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CALM,C,CAOP;;AACA,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,SAAO;AACHH,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CALM,C,CAOP;;AACA,IAAMI,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBd,YAAyB;AAAA,MAAXe,MAAW;;AAClD,UAAQA,MAAM,CAACN,IAAf;AACI,SAAKV,OAAL;AACI,6CAAWe,KAAX,GAAqBC,MAAM,CAACC,OAA5B;;AACJ,SAAK,QAAL;AACI,6CACOF,KADP;AAEIb,QAAAA,IAAI,kCACGa,KAAK,CAACb,IADT;AAEAC,UAAAA,UAAU,EAAE,IAFZ;AAGAD,UAAAA,IAAI,EAAEc,MAAM,CAACP;AAHb;AAFR;;AAQJ,SAAK,SAAL;AACI,6CACOM,KADP;AAEIb,QAAAA,IAAI,kCACGa,KAAK,CAACb,IADT;AAEAC,UAAAA,UAAU,EAAE,KAFZ;AAGAD,UAAAA,IAAI,EAAE;AAHN;AAFR;;AAQJ;AACI,aAAOa,KAAP;AAtBR;AAwBH,CAzBD;;AA2BA,eAAeD,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\n\r\nconst initialState = {\r\n    user:{\r\n        isLoggedIn: false,\r\n        user:null,\r\n        signUpData:{},\r\n        loginData:{},\r\n    },\r\n    post:{\r\n        mainPosts: [],\r\n    }\r\n}\r\n\r\n//action creator\r\nexport const loginAction = (data) => {\r\n    return {\r\n        type: 'LOG_IN',\r\n        data,\r\n    }\r\n};\r\n\r\n//action creator\r\nexport const logoutAction = () => {\r\n    console.log(\"3333\");\r\n    return {\r\n        type: 'LOG_IN',\r\n    }\r\n};\r\n\r\n// (이전상태, 액션) => 다음상태\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case HYDRATE:\r\n            return {...state, ...action.payload}\r\n        case 'LOG_IN':\r\n            return{\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    isLoggedIn: true,\r\n                    user: action.data,\r\n                }\r\n            };\r\n        case 'LOG_OUT':\r\n            return{\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    isLoggedIn: false,\r\n                    user: null,\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}