{"ast":null,"code":"import axios from \"axios\";\nimport { all, fork, delay, put, takeLatest } from \"redux-saga/effects\";\n\nfunction addPostAPI() {\n  return axios.post('api/post');\n}\n\nfunction* addPost() {\n  try {\n    // const result = yield call(addPostAPI); // yield가 await같은 역할을한다\n    yield delay(1000);\n    yield put({\n      type: 'ADD_POST_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'ADD_POST_FAIULER',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST', addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["C:/simjieun/react연습/inflearn/react-nodebird/front/sagas/post.js"],"names":["axios","all","fork","delay","put","takeLatest","addPostAPI","post","addPost","type","data","result","err","response","watchAddPost","postSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,IAAb,EAAmBC,KAAnB,EAA0BC,GAA1B,EAA+BC,UAA/B,QAAgD,oBAAhD;;AAEA,SAASC,UAAT,GAAsB;AAClB,SAAON,KAAK,CAACO,IAAN,CAAW,UAAX,CAAP;AACH;;AAED,UAAUC,OAAV,GAAoB;AAChB,MAAI;AACA;AACA,UAAML,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACNK,MAAAA,IAAI,EAAE,kBADA;AAENC,MAAAA,IAAI,EAAEC,MAAM,CAACD;AAFP,KAAD,CAAT;AAIH,GAPD,CAOE,OAAOE,GAAP,EAAW;AACT,UAAMR,GAAG,CAAC;AACNK,MAAAA,IAAI,EAAE,kBADA;AAENC,MAAAA,IAAI,EAAEE,GAAG,CAACC,QAAJ,CAAaH;AAFb,KAAD,CAAT;AAIH;AACJ;;AAGD,UAAUI,YAAV,GAAwB;AACpB,QAAMT,UAAU,CAAC,UAAD,EAAaG,OAAb,CAAhB;AACH;;AAED,eAAe,UAAUO,QAAV,GAAoB;AAC/B,QAAMd,GAAG,CAAC,CACNC,IAAI,CAACY,YAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import axios from \"axios\";\r\nimport {all, fork, delay, put, takeLatest} from \"redux-saga/effects\";\r\n\r\nfunction addPostAPI() {\r\n    return axios.post('api/post')\r\n}\r\n\r\nfunction* addPost() {\r\n    try {\r\n        // const result = yield call(addPostAPI); // yield가 await같은 역할을한다\r\n        yield delay(1000);\r\n        yield put({\r\n            type: 'ADD_POST_SUCCESS',\r\n            data: result.data\r\n        });\r\n    } catch (err){\r\n        yield put({\r\n            type: 'ADD_POST_FAIULER',\r\n            data: err.response.data\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction* watchAddPost(){\r\n    yield takeLatest('ADD_POST', addPost);\r\n}\r\n\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchAddPost),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}