{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  mainPosts: [],\n  Comments: [{}],\n  imagePaths: [],\n  postAdded: false\n};\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var addPost = {\n  type: ADD_POST\n};\nvar dummyPost = {\n  id: 2,\n  content: '더미데이터입니다',\n  User: {\n    id: 1,\n    nickname: '제로초'\n  },\n  Images: [],\n  Comments: []\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts)),\n        postAdded: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/simjieun/react연습/inflearn/react-nodebird/front/reducers/post.js"],"names":["initialState","mainPosts","Comments","imagePaths","postAdded","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","addPost","type","ADD_POST","dummyPost","id","content","User","nickname","Images","reducer","state","action"],"mappings":";;;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AACxBC,EAAAA,SAAS,EAAE,EADa;AAExBC,EAAAA,QAAQ,EAAC,CAAC,EAAD,CAFe;AAKxBC,EAAAA,UAAU,EAAC,EALa;AAMxBC,EAAAA,SAAS,EAAC;AANc,CAArB;AASP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,IAAMC,OAAO,GAAG;AACnBC,EAAAA,IAAI,EAAEC;AADa,CAAhB;AAIP,IAAMC,SAAS,GAAG;AACdC,EAAAA,EAAE,EAAC,CADW;AAEdC,EAAAA,OAAO,EAAC,UAFM;AAGdC,EAAAA,IAAI,EAAC;AACDF,IAAAA,EAAE,EAAC,CADF;AAEDG,IAAAA,QAAQ,EAAE;AAFT,GAHS;AAOdC,EAAAA,MAAM,EAAC,EAPO;AAQdd,EAAAA,QAAQ,EAAC;AARK,CAAlB;;AAWA,IAAMe,OAAO,GAAG,SAAVA,OAAU,GAAgC;AAAA,MAA/BC,KAA+B,uEAAzBlB,YAAyB;AAAA,MAAXmB,MAAW;;AAC5C,UAAOA,MAAM,CAACV,IAAd;AACI,SAAKJ,gBAAL;AACI,6CACOa,KADP;AAEIjB,QAAAA,SAAS,GAAGU,SAAH,4BAAiBO,KAAK,CAACjB,SAAvB,EAFb;AAGIG,QAAAA,SAAS,EAAE;AAHf;;AAKJ;AACI,aAAOc,KAAP;AARR;AAUH,CAXD;;AAaA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    mainPosts: [],\r\n    Comments:[{\r\n\r\n    }],\r\n    imagePaths:[],\r\n    postAdded:false,\r\n}\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const addPost = {\r\n    type: ADD_POST,\r\n}\r\n\r\nconst dummyPost = {\r\n    id:2,\r\n    content:'더미데이터입니다',\r\n    User:{\r\n        id:1,\r\n        nickname: '제로초',\r\n    },\r\n    Images:[],\r\n    Comments:[],\r\n};\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST_REQUEST:\r\n            return {\r\n                ...state,\r\n                mainPosts: [dummyPost, ...state.mainPosts],\r\n                postAdded: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}